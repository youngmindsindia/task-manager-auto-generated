/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Sprint as PrismaSprint } from "@prisma/client";

export class SprintServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SprintCountArgs, "select">): Promise<number> {
    return this.prisma.sprint.count(args);
  }

  async sprints<T extends Prisma.SprintFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SprintFindManyArgs>
  ): Promise<PrismaSprint[]> {
    return this.prisma.sprint.findMany<Prisma.SprintFindManyArgs>(args);
  }
  async sprint<T extends Prisma.SprintFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SprintFindUniqueArgs>
  ): Promise<PrismaSprint | null> {
    return this.prisma.sprint.findUnique(args);
  }
  async createSprint<T extends Prisma.SprintCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SprintCreateArgs>
  ): Promise<PrismaSprint> {
    return this.prisma.sprint.create<T>(args);
  }
  async updateSprint<T extends Prisma.SprintUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SprintUpdateArgs>
  ): Promise<PrismaSprint> {
    return this.prisma.sprint.update<T>(args);
  }
  async deleteSprint<T extends Prisma.SprintDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SprintDeleteArgs>
  ): Promise<PrismaSprint> {
    return this.prisma.sprint.delete(args);
  }
}
